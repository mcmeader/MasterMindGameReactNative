{"ast":null,"code":"'use-strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SolutionContainer = SolutionContainer;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"C:\\\\Users\\\\mmeader\\\\Documents\\\\Development\\\\React Native\\\\MastermindGameReactNative\\\\app\\\\components\\\\GameScreen\\\\Containers\\\\SolutionContainer.js\";\n\nfunction SolutionContainer(_ref) {\n  var _this = this;\n\n  var solution = _ref.solution,\n      hidden = _ref.hidden;\n  return _react.default.createElement(_reactNative.View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, hidden ? _react.default.createElement(_reactNative.View, {\n    style: {\n      flex: 1,\n      alignSelf: 'stretch',\n      backgroundColor: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 23\n    }\n  }) : solution.map(function (peg) {\n    return _react.default.createElement(_reactNative.View, {\n      style: {\n        borderRadius: 100,\n        height: 30,\n        width: 30,\n        backgroundColor: peg.color\n      },\n      key: peg.position,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 37\n      }\n    });\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 5,\n    margin: 5,\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  hiddenMask: {\n    flex: 1,\n    backgroundColor: 'black'\n  }\n});","map":{"version":3,"sources":["C:/Users/mmeader/Documents/Development/React Native/MastermindGameReactNative/app/components/GameScreen/Containers/SolutionContainer.js"],"names":["SolutionContainer","solution","hidden","styles","container","flex","alignSelf","backgroundColor","map","peg","borderRadius","height","width","color","position","StyleSheet","create","margin","flexDirection","justifyContent","alignItems","hiddenMask"],"mappings":"AAAA;;;;;;;;;AAEA;;AACA;;;;AAEO,SAASA,iBAAT,OAAiD;AAAA;;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AAAA,MAAVC,MAAU,QAAVA,MAAU;AACpD,SACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,MAAM,GAAG,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE;AAAEG,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,SAAS,EAAE,SAAtB;AAAiCC,MAAAA,eAAe,EAAE;AAAlD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GACHN,QAAQ,CAACO,GAAT,CAAa,UAAAC,GAAG;AAAA,WAAI,6BAAC,iBAAD;AAAM,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE,GAAhB;AAAqBC,QAAAA,MAAM,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE,EAAxC;AAA4CL,QAAAA,eAAe,EAAEE,GAAG,CAACI;AAAjE,OAAb;AAAwF,MAAA,GAAG,EAAEJ,GAAG,CAACK,QAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAhB,CAFR,CADJ;AAMH;;AAED,IAAMX,MAAM,GAAGY,wBAAWC,MAAX,CAAkB;AAC7BZ,EAAAA,SAAS,EAAE;AACPC,IAAAA,IAAI,EAAE,CADC;AAEPY,IAAAA,MAAM,EAAE,CAFD;AAGPC,IAAAA,aAAa,EAAE,KAHR;AAIPC,IAAAA,cAAc,EAAE,cAJT;AAKPC,IAAAA,UAAU,EAAE;AALL,GADkB;AAQ7BC,EAAAA,UAAU,EAAE;AACRhB,IAAAA,IAAI,EAAE,CADE;AAERE,IAAAA,eAAe,EAAE;AAFT;AARiB,CAAlB,CAAf","sourcesContent":["'use-strict';\r\n\r\nimport React from 'react';\r\nimport { View, StyleSheet } from 'react-native';\r\n\r\nexport function SolutionContainer({ solution, hidden }) {\r\n    return (\r\n        <View style={styles.container}>\r\n            {hidden ? <View style={{ flex: 1, alignSelf: 'stretch', backgroundColor: \"black\" }} /> :\r\n                solution.map(peg => <View style={{ borderRadius: 100, height: 30, width: 30, backgroundColor: peg.color, }} key={peg.position} />)}\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 5,\r\n        margin: 5,\r\n        flexDirection: 'row',\r\n        justifyContent: 'space-around',\r\n        alignItems: 'center',\r\n    },\r\n    hiddenMask: {\r\n        flex: 1,\r\n        backgroundColor: 'black',\r\n    }\r\n});"]},"metadata":{},"sourceType":"script"}